import speech_recognition as sr
#import time
import pyttsx3
import openai
import webbrowser


openai.api_key = "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"
r = sr.Recognizer()
engine = pyttsx3.init()
def record_audio():
    with sr.Microphone() as source:

        r.adjust_for_ambient_noise(source, duration=1)

        audio = r.listen(source)
      #  voice_data = ''

        try:
            voice_data = r.recognize_google(audio)
            print(voice_data)

        except sr.UnknownValueError:
            print("sorry i did not get that")
            return ("sorry i did not get that")
            #main()
        except sr.RequestError:
            print("sorry your speech service is down")
            speak("sorry your speech service is down")
        return voice_data

def speak(audio_string, speed=150):
    voices = engine.getProperty("voices")
    engine.setProperty("voice", voices[1].id)
    engine.setProperty("rate",speed)
    engine.say(audio_string)
    engine.runAndWait()


"""
def transcribe_audio_to_text(file):
    # recognizer = sr.Recognizer()

     try:
         with sr.AudioFile(file) as source:
             r.adjust_for_ambient_noise(source, duration=1)
             audio = r.record(source)
         text = r.recognize_google(audio)
         return text
     except:
        print("skipping unknown error")

"""
def generate_response(prompt):
    response = openai.Completion.create(
        engine="gpt-3.5-turbo-instruct",
        prompt=prompt,
        max_tokens=150,
        n=1,
        stop=None,
        
    )
    #return response.choices[0].text.strip()
    return response["choices"][0]["text"]


def main():
    print("how can i help you")
    speak('how can i help you')

    while 1:
        voice_data = record_audio()
        if "exit" in voice_data:
            speak("exit")
            exit()
        elif "search" in voice_data:  # if find location in voice_data
            print("ask")
            speak("ask")
            search = record_audio()  # location
            url = 'https://google.com/search?q=' + search  # 'https://google.nl/mapz/place/' + location +'/&amp;'
            webbrowser.get().open(url)
            speak("here is what i found for" + search)
        else:  # transcription = transcribe_audio_to_text(voice_data)
            response = generate_response(voice_data)
            print(response)
            speak(response)
        """elif "who is prakash wife" or "who is prakash lover" in voice_data.lower():
            print("kuruni")
            speak("kuruni")"""


if __name__ == "__main__":
    main()
    

